---
title: "Class 9: Structural Bioinformatics (pt1)"
author: "Nathaniel Nono (PID:A16782656)"
format: pdf
---

# Introduction to the RCSB Protein Data Bank (PDB)

```{r}
pdbdb <- read.csv("pdb_stats.csv")
```

```{r}
head(pdbdb)
```

## Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

### Approach 1: Write a function to remove all the commas and turn it into a number to do math

```{r}
# Remove character (comma) to be left only with a number
# Turn that column into a number class

x <- pdbdb$Total

comma2numeric <- function(x){
  as.numeric(sub(',','',x))
}
```

```{r}
comma2numeric(x)
```

### Approach 2: Employ a different read csv function

```{r}
# install tidyverse: install.packages("tidyverse")
library(readr)
pdbdb <- read_csv('pdb_stats.csv')
```

```{r}
# New table that changed all of the characters
pdbdb
```

```{r}
sum(pdbdb$`X-ray`) / sum(pdbdb$Total) * 100
```

```{r}
sum(pdbdb$EM) / sum(pdbdb$Total) * 100
```

**83.30% of structures in the PDB are solved by X-Ray while only 10.18% of structures in the PDB are solved by Electron Microscopy.**

## Q2: What proportion of structures in the PDB are protein?

```{r}
pdbdb$Total[1]/sum(pdbdb$Total) * 100
```

**86.39% of structures in the PDB are only proteins**

## Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

**In the current PDB database there are 4563 structures**



# Visualizing the HIV-1 protease structure



## Using Mol

Using Mol is a new web-based molecular viewer that we will need to learn the basic of here

https://molstar.org/viewer/

We will use PDB code: `1HSG`



![A first image of 1HSG protein from molstar](1HSG.png)



## Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

**We are only seein one atom per water molecule in thgis structure because Mol viewer is setting some default parameters to make it easier for us to see. There are still 3 atoms in the water molecule but by  turning it into one atom the screen gets less clutered**



## Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

![Water 308 zoomed out](1HSG_water308.png)



![Water 308 zoomed in](1HSG_water308zoom.png)

**This water molecule is residue #308 as shown in the images above. This water molecule is situated right inside of the complex**



## Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain andØthe critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![The all important catalytic ASP25 amino acids](1HSG_cartoon.png)



![](1HSG_molecularsurface.png)



![](1HSG_ligandspaceview.png)



## Q7: \[Optional\] As you have hopefully observed HIV protease is a homodimer (i.e. it is composed of two identical chains). With the aid of the graphic display can you identify secondary structure elements that are likely to only form in the dimer rather than the monomer?

# Introduction to Bio3D in R

The bio3d package allows us to do all sorts of structural bioinformatics work in R

Let's start with how it can read these PDB files

```{r}
library(bio3d)

pdb <- read.pdb('1hsg')
pdb
```

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

```{r}
pdbseq(pdb)[25]
```

## Q7: How many amino acid residues are there in this pdb object?

```{r}
sum(pdb$calpha)
```

**There are 198 amino acid residues in this pdb object**



## Q8: Name one of the two non-protein residues?

**HOH and MK1**



## Q9: How many protein chains are in this structure?

```{r}
unique(pdb$atom$chain)
```

**There are 2 protein chains in this structure**



## Predicting functional motions of a single strucutre

Let's do a bioinformatics prediction of functional motions - i.e. the movements that one of these molecules needs to make to do its stuff


```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
# Perform flexiblity prediction
m <- nma(adk)
```

```{r}
plot(m)
```

Write out a multi-mdel PDB file (trajectory) that we can use to make an animation of the predicted motions.
```{r}
mktrj(m, file="adk.pdb")
```

I can open this in Mol* to play the trajectory

# Comparative Analysis of Protein strucutre

```{r}
library(bio3d)
```

Here I will find and analyze all Adenylate kinase (ADK) structures in the PDB database.

We will start with a single databse acession id: "1ake_A"

```{r}
id <- '1ake_A'

aa <- get.seq(id)
```

Uncomment and run these packages in the cmds

#install.packages("bio3d")
#install.packages("devtools")
#install.packages("BiocManager")

#BiocManager::install("msa")
#devtools::install_bitbucket("Grantlab/bio3d-view")

- CRAN: R's central software repository, supported by the R Foundation

- Bioconductor: Package solely for bioinformatics

## Q10. Which of the packages above is found only on BioConductor and not CRAN? 

**The MSA package**



## Q11. Which of the above packages is not found on BioConductor or CRAN?: 

****



## Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 

**TRUE**


## Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

```{r}
attributes(aa)
```

```{r}
# identifaciton
aa$id

# sequence
aa$ali

# line used to read it
aa$call

# The fasta sequence
aa$fasta
```


```{r}
# Number of sequences (1 column = 1 amino acid)
ncol(aa$ali)
```

**There are 214 amino acids in this sequence**


## BLAST search the PDB to find similar sequences and structures

Blast search:

```{r}
#b <- blast.pdb(aa)
```



Pre-calculated results of blast search:

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

next we will use the pdbaln() function to align and also optionally fit (i.e. superpose) the identified PDB strucutres

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
pdbs
```



## Perform a principal component analysis

```{r}
# Perform PCA using the function
pc.xray <- pca(pdbs)
plot(pc.xray)
```

To visualzie the major strucutral variatons in the ensemble the function mktrk()



```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```



```{r}
uniport <- 248838887
pdb <-        195610

round((pdb/uniport * 100), 2)
```

Only 0.08% of proteins have been visually structured from the total sequences we know


